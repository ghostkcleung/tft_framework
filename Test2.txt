以下是一個簡單的 C 語言函數，可以將 WGS84 經緯度轉換為 HK1980 方格座標：

```c
#include

void wgs84_to_hk1980(double lat, double lon, double &x, double &y) {
double a = 6378137.0; // WGS84橢球體長半軸
double b = 6356752.3142; // WGS84橢球體短半軸
double e = sqrt(1 - pow(b / a, 2)); // WGS84橢球體第一偏心率
double e2 = pow(e, 2); // WGS84橢球體第二偏心率
double m0 = 0.9999; // HK1980中央子午線縮尺因子
double a0 = 6367558.4969; // HK1980橢球體長半軸
double b0 = 6356256.910; // HK1980橢球體短半軸
double e0 = sqrt(1 - pow(b0 / a0, 2)); // HK1980橢球體第一偏心率
double e02 = pow(e0, 2); // HK1980橢球體第二偏心率
double n = (a - b) / (a + b); // WGS84橢球體地球極半徑差
double n2 = pow(n, 2); // WGS84橢球體地球極半徑差平方
double n3 = pow(n, 3); // WGS84橢球體地球極半徑差三次方
double n4 = pow(n, 4); // WGS84橢球體地球極半徑差四次方
double n5 = pow(n, 5); // WGS84橢球體地球極半徑差五次方
double n6 = pow(n, 6); // WGS84橢球體地球極半徑差六次方
double aStar = a / (1 + n) * (1 + n2 / 4 + n4 / 64 + n6 / 256); // WGS84橢球體地球極半徑
double deltaLon = lon - 114.178555; // 經度差
double deltaLat = lat - 22.2670; // 緯度差
double sinLat = sin(lat * M_PI / 180); // 緯度的正弦值
double cosLat = cos(lat * M_PI / 180); // 緯度的餘弦值
double cos2Lat = pow(cosLat, 2); // 緯度的餘弦值平方
double cos3Lat = pow(cosLat, 3); // 緯度的餘弦值三次方
double cos4Lat = pow(cosLat, 4); // 緯度的餘弦值四次方
double cos5Lat = pow(cosLat, 5); // 緯度的餘弦值五次方
double cos6Lat = pow(cosLat, 6); // 緯度的餘弦值六次方
double cos7Lat = pow(cosLat, 7); // 緯度的餘弦值七次方
double cos8Lat = pow(cosLat, 8); // 緯度的餘弦值八次方
double l = deltaLon * M_PI / 180; // 經度差的弧度值
double l2 = pow(l, 2); // 經度差的弧度值平方
double l3 = pow(l, 3); // 經度差的弧度值三次方
double l4 = pow(l, 4); // 經度差的弧度值四次方
double l5 = pow(l, 5); // 經度差的弧度值五次方
double l6 = pow(l, 6); // 經度差的弧度值六次方
double l7 = pow(l, 7); // 經度差的弧度值七次方
double l8 = pow(l, 8); // 經度差的弧度值八次方
double m = aStar * ((1 - pow(e, 2) / 4 - 3 * pow(e, 4) / 64 - 5 * pow(e, 6) / 256) * lat
- (3 * pow(e, 2) / 8 + 3 * pow(e, 4) / 32 + 45 * pow(e, 6) / 1024) * sin(2 * lat)
+ (15 * pow(e, 4) / 256 + 45 * pow(e, 6) / 1024) * sin(4 * lat)
- (35 * pow(e, 6) / 3072) * sin(6 * lat)); // WGS84橢球體子午線弧長
double n0 = a0 / sqrt(1 - e02 * pow(sinLat, 2)); // HK1980橢球體卯酉圈曲率半徑
double t = tan(lat * M_PI / 180); // 緯度的正切值
double t2 = pow(t, 2); // 緯度的正切值平方
double t4 = pow(t, 4); // 緯度的正切值四次方
double t6以下是一個用 C 語言寫出的 WGS84 經緯度轉換成 HK1980 方格座標的 function，使用的是公式轉換法：

```c
void wgs84_to_hk1980(double lat, double lon, double &x, double &y) {
// WGS84橢球體參數
double a = 6378137.0; // 赤道半徑
double f = 1 / 298.257223563; // 扁率

// HK1980坐標系參數
double a0 = 6378388.0; // 香港1973坐標系長軸半徑
double b0 = 6356911.946; // 香港1973坐標系短軸半徑
double e0 = sqrt(1 - (b0 * b0) / (a0 * a0)); // 香港1973坐標系第一偏心率
double e1 = sqrt((a0 * a0) / (b0 * b0) - 1); // 香港1973坐標系第二偏心率

// 轉換經度和緯度為弧度
double lat_r = lat * M_PI / 180.0;
double lon_r = lon * M_PI / 180.0;

// 計算WGS84橢球體參數
double W = sqrt(1 - pow(e0 * sin(lat_r), 2));
double N = a / W;

// 計算WGS84經緯度到香港1973坐標系的轉換
double M = a0 * ((1 - pow(e0, 2) / 4 - 3 * pow(e0, 4) / 64 - 5 * pow(e0, 6) / 256) * lat_r
- (3 * pow(e0, 2) / 8 + 3 * pow(e0, 4) / 32 + 45 * pow(e0, 6) / 1024) * sin(2 * lat_r)
+ (15 * pow(e0, 4) / 256 + 45 * pow(e0, 6) / 1024) * sin(4 * lat_r)
- (35 * pow(e0, 6) / 3072) * sin(6 * lat_r));
double t = tan(lat_r);
double eta = e1 * cos(lat_r);
double A = (lon_r - M_PI * 113.0 / 180.0) * cos(lat_r);
double N1 = a0 / sqrt(1 - pow(e0 * sin(lat_r), 2));
double M1 = a0 * ((1 - pow(e0, 2) / 4 - 3 * pow(e0, 4) / 64 - 5 * pow(e0, 6) / 256) * lat_r
- (3 * pow(e0, 2) / 8 + 3 * pow(e0, 4) / 32 + 45 * pow(e0, 6) / 1024) * sin(2 * lat_r)
+ (15 * pow(e0, 4) / 256 + 45 * pow(e0, 6) / 1024) * sin(4 * lat_r)
- (35 * pow(e0, 6) / 3072) * sin(6 * lat_r));

double x0 = 836694.05;
double y0 = 819069.80;

double x_hk1980 = x0 + N1 * (A + pow(A, 3) * (1 - pow(t, 2) + pow(eta, 2)) / 6
+ pow(A, 5) * (5 - 18 * pow(t, 2) + pow(t, 4) + 14 * pow(eta, 2) - 58 * pow(t, 2) * pow(eta, 2)) / 120);
double y_hk1980 = y0 + M1 - N1 * t * (pow(A, 2) / 2 + pow(A, 4) * (5 - pow(t, 2) + 9 * pow(eta, 2) + 4 * pow(eta, 4)) / 24
+ pow(A, 6) * (61 - 58 * pow(t, 2) + pow(t, 4) + 270 * pow(eta, 2) - 330 * pow(t, 2) * pow(eta, 2)) / 720);

x = x_hk1980;
y = y_hk1980;
}
```

這個 function 接受三個參數：經度 `lon`、緯度 `lat` 和兩個指向 `double` 的變量 `x` 和 `y`，用於存儲轉換後的 HK1980 方格座標。在 function 內部，首先定義了 WGS84 橢球體和 HK1980 坐標系的參數，然後將經度和緯度轉換為弧度。接下來，使用公式計算 WGS84 經緯度到 HK1980 坐標系的轉換，最後將計算結果存儲到 `x` 和 `y` 變量中。

需要注意的是，這個 function 中使用了 `M_PI` 常量，這是 C 語言中的圓周率常量，需要包含 `` 標頭文件才能使用。此外，因為 function 中使用了指向 `double` 的變量，以下是一個用 C 語言實現的 WGS84 經緯度轉換成 HK1980 方格座標的函數：

```c
#include

void wgs84_to_hk1980(double lat, double lon, double &x, double &y) {
// WGS84 橢球體參數
const double a = 6378137.0; // 長半軸
const double f = 1.0 / 298.257223563; // 扁率
const double e2 = 2 * f - f * f; // 第一偏心率平方
const double e2p = e2 / (1 - e2); // 第二偏心率平方

// HK1980 平面直角座標系統參數
const double a0 = 6367558.4969;
const double b0 = 16002.8900;
const double c0 = 16.8326;
const double a1 = 32005.7800;
const double b1 = 0.0091;
const double c1 = 0.00004;
const double a2 = 0.0003;
const double b2 = 0.0003;
const double c2 = 0.0000;

// 計算中間變量
const double phi = lat * M_PI / 180; // 緯度轉弧度
const double lambda = lon * M_PI / 180; // 經度轉弧度
const double n = (a - b0) / (a + b0);
const double nu = a / sqrt(1 - e2 * sin(phi) * sin(phi));
const double rho = a * (1 - e2) / pow(1 - e2 * sin(phi) * sin(phi), 1.5);
const double eta2 = nu / rho - 1;
const double M = a * ((1 - e2 / 4 - 3 * pow(e2, 2) / 64 - 5 * pow(e2, 3) / 256) * phi
- (3 * e2 / 8 + 3 * pow(e2, 2) / 32 + 45 * pow(e2, 3) / 1024) * sin(2 * phi)
+ (15 * pow(e2, 2) / 256 + 45 * pow(e2, 3) / 1024) * sin(4 * phi)
- (35 * pow(e2, 3) / 3072) * sin(6 * phi));
const double A = (lambda - M_PI * 114 / 180) * cos(phi);
const double A2 = A * A;
const double A3 = A2 * A;
const double A4 = A3 * A;
const double A5 = A4 * A;
const double A6 = A5 * A;
const double A7 = A6 * A;
const double A8 = A7 * A;
const double A9 = A8 * A;
const double A10 = A9 * A;

// 計算 HK1980 平面直角座標系統的 x 和 y
x = a0 * phi + a1 * sin(2 * phi) + a2 * sin(4 * phi) + A2 * b1 + A4 * b2 + A6 * c1 + A8 * c2;
y = M + nu * tan(phi) * (A2 / 2 + (5 - eta2 + 9 * eta2 * eta2 + 4 * eta2 * eta2 * eta2) * A4 / 24
+ (61 - 58 * eta2 + eta2 * eta2 + 600 * eta2 * eta2 * eta2 - 330 * eta2 * eta2 * eta2 * eta2) * A6 / 720);
}
```

這個函數接受三個參數：經度 `lon`、緯度 `lat` 和兩個指向 `double` 型變量的指針 `x` 和 `y`。函數會計算出對應的 HK1980 平面直角座標系統的 x 和 y，並將結果存儲在 `x` 和 `y` 指向的變量中。注意，這個函數使用了數學庫中的 `sqrt()`、`sin()`、`cos()`、`tan()` 和 `pow()` 函數，因此需要包含 `` 標頭文件。
